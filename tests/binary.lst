WARM Assembly of ../tests/binary.s                                      Page 1

Line [ Addr ]
0001           ;;; A simple solution to the binary.s problem of Computer Science
0002           ;;; (c) 2010 duane a. bailey
0003 [0x0000]: main:
0004 [0x0000]: _loop:  swis    #SysGetNum
     [0x0000]: 0x16800201 = 0b00010110100000000000001000000001
0005 [0x0001]:         beq     _done
     [0x0001]: 0x4c000004 = 0b01001100000000000000000000000100
0006 [0x0002]:         bl      putbin
     [0x0002]: 0x0d000004 = 0b00001101000000000000000000000100
0007 [0x0003]:         bl      newline
     [0x0003]: 0x0d000019 = 0b00001101000000000000000000011001
0008 [0x0004]:         b       _loop
     [0x0004]: 0x0cfffffc = 0b00001100111111111111111111111100
0009 [0x0005]: _done:  swi     #SysHalt
     [0x0005]: 0x06800000 = 0b00000110100000000000000000000000
0010                   
0011           ;;; First attempt at this program.  The approach is to simply pri
0012           ;;; (or not) 32 binary digits of the value in r0.
0013 [0x0006]: putbin: stu     lr,[sp,#-1]
     [0x0006]: 0x09f6bfff = 0b00001001111101101011111111111111
0014 [0x0007]:         stm     sp,#0x6
     [0x0007]: 0x07e80203 = 0b00000111111010000000001000000011
0015 [0x0008]:         mov     r2,#32
     [0x0008]: 0x05900a01 = 0b00000101100100000000101000000001
0016 [0x0009]:         movs    r1,r0
     [0x0009]: 0x15884000 = 0b00010101100010000100000000000000
0017 [0x000a]:         blt     _neg
     [0x000a]: 0x8c000006 = 0b10001100000000000000000000000110
0018 [0x000b]:         beq     _zero
     [0x000b]: 0x4c00000d = 0b01001100000000000000000000001101
0019 [0x000c]: _skipz: subs    r2,r2,#1
     [0x000c]: 0x11110001 = 0b00010001000100010000000000000001
0020 [0x000d]:         beq     _done
     [0x000d]: 0x4c00000d = 0b01001100000000000000000000001101
0021 [0x000e]:         movs    r1,r1,lsl#1
     [0x000e]: 0x15884041 = 0b00010101100010000100000001000001
0022 [0x000f]:         bge     _skipz
     [0x000f]: 0xccfffffd = 0b11001100111111111111111111111101
0023 [0x0010]: _neg:   mov     r0,#'1
     [0x0010]: 0x05800031 = 0b00000101100000000000000000110001
0024 [0x0011]: _prt:   swi     #SysPutChar
     [0x0011]: 0x06800003 = 0b00000110100000000000000000000011
0025 [0x0012]:         subs    r2,r2,#1
     [0x0012]: 0x11110001 = 0b00010001000100010000000000000001
0026 [0x0013]:         beq     _done
     [0x0013]: 0x4c000007 = 0b01001100000000000000000000000111
0027 [0x0014]:         movs    r1,r1,lsl #1
     [0x0014]: 0x15884041 = 0b00010101100010000100000001000001
0028 [0x0015]:         blt     _neg
     [0x0015]: 0x8cfffffb = 0b10001100111111111111111111111011
0029 [0x0016]:         mov     r0,#'0
     [0x0016]: 0x05800803 = 0b00000101100000000000100000000011
0030 [0x0017]:         b       _prt
     [0x0017]: 0x0cfffffa = 0b00001100111111111111111111111010
0031 [0x0018]: _zero:  mov     r0,#'0
     [0x0018]: 0x05800803 = 0b00000101100000000000100000000011
0032 [0x0019]:         swi     #SysPutChar
     [0x0019]: 0x06800003 = 0b00000110100000000000000000000011
0033 [0x001a]: _done:
0034 [0x001a]:         ldm     sp,#0x6 
WARM Assembly of ../tests/binary.s                                      Page 2

Line [ Addr ]
     [0x001a]: 0x07680203 = 0b00000111011010000000001000000011
0035 [0x001b]:         ldu     pc,[sp,#1]
     [0x001b]: 0x097e8001 = 0b00001001011111101000000000000001
0036           
0037           ;; write a newline
0038 [0x001c]: newline:
0039 [0x001c]:         mov     r0,#10
     [0x001c]: 0x05800205 = 0b00000101100000000000001000000101
0040 [0x001d]:         swi     #SysPutChar
     [0x001d]: 0x06800003 = 0b00000110100000000000000000000011
0041 [0x001e]:         mov     pc,lr
     [0x001e]: 0x05f84380 = 0b00000101111110000100001110000000

-------------------------------------------------------------------------------
Symbols defined:
        main=0           newline=28           putbin=6      
-------------------------------------------------------------------------------
Assembled 31 instructions at 516.67 instructions per second.
