;;; A clone program for the Great Class of 2010, by Duane.
;;; The output of this program should be the same as the source.
x0:	adr	r0,[pc,#0x200]
x1:	bl	xe4
x2:	adr	r0,[pc,#0x235]
x3:	bl	xe4
x4:	adr	r2,[pc,#0x0fc]
x5:	adr	r1,[pc,#-5]
x6:	cmps	r1,r2,lsl#0
x7:	bge	x6d
x8:	ldr	r3,[r1,#0]
x9:	mov	r0,r1,lsl#0
xa:	bl	xa5
xb:	mov	r0,#0x3a
xc:	swi	#3
xd:	bl	x0fa
xe:	mov	r4,r3,lsr#23
x0f:	and	r4,r4,#0x1f
x10:	bl	x98
x11:	bl	x0fa
x12:	cmps	r4,#0x18
x13:	blt	x1a
x14:	mvn	r0,#-0x1000000
x15:	and	r0,r3,r0,lsl#0
x16:	mov	r0,r0,lsl#8
x17:	add	r0,r1,r0,asr#8
x18:	bl	xa5
x19:	b	x6a
x1a:	cmps	r4,#3
x1b:	beq	x24
x1c:	cmps	r4,#7
x1d:	beq	x24
x1e:	cmps	r4,#0xd
x1f:	beq	x24
x20:	mov	r0,r3,lsr#19
x21:	and	r0,r0,#0x0f
x22:	bl	xac
x23:	bl	x0fd
x24:	cmps	r4,#0xb
x25:	bge	x2a
x26:	mov	r0,r3,lsr#15
x27:	and	r0,r0,#0x0f
x28:	bl	xac
x29:	bl	x0fd
x2a:	cmps	r4,#0x10
x2b:	bge	x4e
x2c:	ands	r0,r3,#0x4000
x2d:	bne	x36
x2e:	mov	r0,#0x23
x2f:	swi	#3
x30:	and	r0,r3,#0x1ff
x31:	mov	r5,r3,lsr#9
x32:	and	r5,r5,#0x3f
x33:	mov	r0,r0,lsl r5
x34:	bl	xb0
x35:	b	x6a
x36:	mov	r0,r3,lsr#6
x37:	and	r0,r0,#0x0f
x38:	bl	xac
x39:	bl	x0fd
x3a:	mov	r5,r3,lsr#12
x3b:	ands	r5,r5,#3
x3c:	cmps	r5,#1
x3d:	bgt	x4b
x3e:	mov	r0,r3,lsr#10
x3f:	and	r0,r0,#3
x40:	ldr	r0,[r0,#0x128]
x41:	bl	x0f0
x42:	cmps	r5,#1
x43:	beq	x49
x44:	mov	r0,#0x23
x45:	swi	#3
x46:	and	r0,r3,#0x3f
x47:	bl	xd0
x48:	b	x6a
x49:	mov	r0,#0x20
x4a:	swi	#3
x4b:	ands	r0,r3,#0x0f
x4c:	bl	xac
x4d:	b	x6a
x4e:	mov	r0,#0x5b
x4f:	swi	#3
x50:	mov	r5,#0x0f
x51:	and	r0,r5,r3,lsr#15
x52:	bl	xac
x53:	bl	x0fd
x54:	ands	r0,r3,#0x4000
x55:	bne	x5c
x56:	mov	r0,#0x23
x57:	swi	#3
x58:	mov	r0,r3,lsl#18
x59:	mov	r0,r0,asr#18
x5a:	bl	xb0
x5b:	b	x68
x5c:	mov	r0,r3,lsr#6
x5d:	and	r0,r0,#0x0f
x5e:	bl	xac
x5f:	bl	x0fd
x60:	mov	r0,r3,lsr#10
x61:	and	r0,r0,#3
x62:	ldr	r0,[r0,#0x128]
x63:	bl	x0f0
x64:	mov	r0,#0x23
x65:	swi	#3
x66:	and	r0,r3,#0x1f
x67:	bl	xd0
x68:	mov	r0,#0x5d
x69:	swi	#3
x6a:	bl	x0f7
x6b:	add	r1,r1,#1
x6c:	b	x6
x6d:	adr	r0,[pc,#0x207]
x6e:	bl	xe4
x6f:	adr	r2,[pc,#0xcd]
x70:	cmps	r1,r2,lsl#0
x71:	bge	x7e
x72:	mov	r0,r1,lsl#0
x73:	bl	xa5
x74:	mov	r0,#0x3a
x75:	swi	#3
x76:	bl	x0fa
x77:	adr	r0,[pc,#0x17b]
x78:	bl	x0f0
x79:	bl	x0fa
x7a:	ldu	r0,[r1,#1]
x7b:	bl	xa5
x7c:	bl	x0f7
x7d:	b	x70
x7e:	adr	r0,[pc,#0x20a]
x7f:	bl	xe4
x80:	adr	r2,[pc,#0x21f]
x81:	cmps	r1,r2,lsl#0
x82:	bge	x95
x83:	mov	r0,r1,lsl#0
x84:	bl	xa5
x85:	mov	r0,#0x3a
x86:	swi	#3
x87:	bl	x0fa
x88:	adr	r0,[pc,#0x170]
x89:	bl	x0f0
x8a:	bl	x0fa
x8b:	mov	r0,#0x22
x8c:	swi	#3
x8d:	ldus	r0,[r1,#1]
x8e:	beq	x91
x8f:	swi	#3
x90:	b	x8d
x91:	mov	r0,#0x22
x92:	swi	#3
x93:	bl	x0f7
x94:	b	x81
x95:	adr	r0,[pc,#0x1fc]
x96:	bl	xe4
x97:	swi	#0
x98:	stu	lr,[sp,#-1]
x99:	stm	sp,#3
x9a:	ldr	r0,[r4,#0x100]
x9b:	bl	x0f0
x9c:	mov	r1,r3,lsr#29
x9d:	ldr	r0,[r1,#0x120]
x9e:	bl	x0f0
x9f:	ands	r1,r3,#0x10000000
xa0:	beq	xa3
xa1:	mov	r0,#0x73
xa2:	swi	#3
xa3:	ldm	sp,#3
xa4:	ldu	pc,[sp,#1]
xa5:	stu	lr,[sp,#-1]
xa6:	stu	r0,[sp,#-1]
xa7:	mov	r0,#0x78
xa8:	swi	#3
xa9:	ldu	r0,[sp,#1]
xaa:	bl	xc3
xab:	ldu	pc,[sp,#1]
xac:	stu	lr,[sp,#-1]
xad:	ldr	r0,[r0,#0x12c]
xae:	bl	x0f0
xaf:	ldu	pc,[sp,#1]
xb0:	stu	lr,[sp,#-1]
xb1:	cmps	r0,#0
xb2:	bge	xb7
xb3:	mvn	lr,r0,lsl#0
xb4:	mov	r0,#0x2d
xb5:	swi	#3
xb6:	add	r0,lr,#1
xb7:	cmps	r0,#0xa
xb8:	blt	xc1
xb9:	stu	r0,[sp,#-1]
xba:	mov	r0,#0x30
xbb:	swi	#3
xbc:	mov	r0,#0x78
xbd:	swi	#3
xbe:	ldu	r0,[sp,#1]
xbf:	bl	xc3
xc0:	b	xc2
xc1:	bl	xd0
xc2:	ldu	pc,[sp,#1]
xc3:	stu	lr,[sp,#-1]
xc4:	cmps	r0,#0x0f
xc5:	blt	xcb
xc6:	stu	r0,[sp,#-1]
xc7:	mov	r0,r0,lsr#4
xc8:	bl	xc3
xc9:	ldu	r0,[sp,#1]
xca:	and	r0,r0,#0x0f
xcb:	cmps	r0,#0xa
xcc:	addlt	r0,r0,#0x30
xcd:	addge	r0,r0,#0x57
xce:	swi	#3
xcf:	ldu	pc,[sp,#1]
xd0:	stu	lr,[sp,#-1]
xd1:	cmps	r0,#0
xd2:	bge	xd7
xd3:	mvn	lr,r0,lsl#0
xd4:	mov	r0,#0x2d
xd5:	swi	#3
xd6:	add	r0,lr,#1
xd7:	cmps	r0,#0xa
xd8:	blt	xe1
xd9:	stu	r0,[sp,#-1]
xda:	div	r0,r0,#0xa
xdb:	bl	xd0
xdc:	ldr	r0,[sp,#0]
xdd:	div	lr,r0,#0xa
xde:	mul